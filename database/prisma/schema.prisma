generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

// Change this to match your database connection
datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@127.0.0.1:5435/stock_db"
}

enum ReportType {
  ANNUAL
  QUARTERLY
}

model Tickers {
  id                    String    @id @default(uuid())
  ticker                String    @unique
  name                  String
  market                String
  ipoYear               Int
  sector                String
  industry              String
  delisted              Boolean   @default(false)
  fundamentalsUpdatedAt DateTime? @db.Date
  recentSplitDivend     Boolean?  @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@unique([ticker, market])
  @@index([ticker, market])
}

model EarningCall {
  id               String   @id @default(uuid())
  ticker           String
  reportDate       DateTime @db.Date
  fiscalDateEnding DateTime @db.Date
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([ticker, fiscalDateEnding])
  @@index([ticker, fiscalDateEnding])
}

model Fundamentals {
  id               String     @id @default(uuid())
  ticker           String
  reportDate       String
  reportType       ReportType
  sales            BigInt
  netIncome        BigInt
  grossMarginRatio Float
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  @@unique([ticker, reportDate, reportType])
  @@index([ticker, reportDate, reportType])
}

model TradingCalendar {
  id   String   @id @default(uuid())
  date DateTime @unique @db.Date

  @@index([date])
}

model DailyKline {
  id       String   @id @default(uuid())
  ticker   String
  date     DateTime @db.Date
  open     Float
  high     Float
  low      Float
  close    Float
  adjClose Float
  volume   BigInt

  @@unique([ticker, date])
  @@index([ticker, date])
}

model RelativeStrength {
  id     String   @id @default(uuid())
  ticker String
  date   DateTime @db.Date
  rscore Float
  M1     Float?
  M3     Float?
  M6     Float?

  @@unique([ticker, date])
  @@index([ticker, date])
}

model Naa200r {
  id    String   @id @default(uuid())
  date  DateTime @db.Date
  value Float

  @@unique([date])
  @@index([date])
}

model Report {
  id   String   @id @default(uuid())
  date DateTime @db.Date
  kind String
  data Json?

  @@index([date, kind])
}

model Loggings {
  id        String   @id @default(uuid())
  timestamp DateTime @default(now())
  category  String
  data      Json?

  @@index([category])
}
